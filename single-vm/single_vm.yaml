tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://github.com/indigo-paas/tosca-types/raw/main/tosca_types/base/basic_types.yaml

description: >
  Launch a compute node getting the IP and SSH credentials to access via ssh
metadata:
  display_name: Virtual machine

topology_template:

  inputs:

    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 1

    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 2 GB

    os_distribution:
      type: string
      default: ubuntu
      description: Operating System distro
      constraints:
         - valid_values: [ "ubuntu", "centos" ]

    os_version:
      type: version
      default: 20.04
      description: Operating System distribution version
      constraints:
         - valid_values: [ 18.04, 20.04, 7 ]

    service_ports:
      type: map
      required: false
      default: { "ssh": { "protocol": "tcp", "source": 22 } }
      constraints:
        - min_length: 0
      entry_schema:
        type: tosca.datatypes.indigo.network.PortSpec
      description: Ports to open on the host


  node_templates:

    pub_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: public

    server_pub_port:
      type: tosca.nodes.network.Port
      properties:
        order: 1
      requirements:
        - binding: simple_node
        - link: pub_network

    priv_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: private

    server_priv_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: simple_node
        - link: priv_network


    simple_node:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            ports: { get_input: service_ports }
        scalable:
          properties:
            count: 1
        host:
          properties:
            #instance_type: m1.small
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            distribution: { get_input: os_distribution }
            version: { get_input: os_version }

  outputs:
    node_ip:
      value: { get_attribute: [ simple_node, public_address, 0 ] }
    node_creds:
      value: { get_attribute: [ simple_node, endpoint, credential, 0 ] }
