tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://github.com/indigo-paas/tosca-types/raw/main/tosca_types/base/basic_types.yaml

description: >
  Launch a compute node with attached volume and get the IP and SSH credentials to access via ssh

metadata:
  display_name: Virtual machine with block device

topology_template:

  inputs:
    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 1
      constraints:
      - valid_values: [ 1, 2, 4 ]
    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 2 GB
      constraints:
      - valid_values: [ 2 GB, 4 GB ]

    os_distribution:
      type: string
      default: ubuntu
      description: Operating System distro - valid values ubuntu, centos
      constraints:
         - valid_values: [ "ubuntu", "centos" ]

    os_version:
      type: version
      default: 20.04
      description: Operating System distribution version
      constraints:
         - valid_values: [ 18.04, 20.04, 7 ]

    ports:
      type: map
      required: false
      default: { "ssh": { "protocol": "tcp", "source": 22 } }
      constraints:
        - min_length: 0
      entry_schema:
        type: tosca.datatypes.indigo.network.PortSpec
      description: Ports to open on the host

    mountpoint:
      type: string
      default: /data
      description: Path to mount the volume

    volume_size:
      type: scalar-unit.size
      description: Size of the volume to be attached
      default: 10 GB

  node_templates:

    pub_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: public

    server_pub_port:
      type: tosca.nodes.network.Port
      properties:
        order: 1
      requirements:
        - binding: server
        - link: pub_network

    priv_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: private

    server_priv_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: server
        - link: priv_network


    server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            ports: { get_input: ports }
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            distribution: { get_input: os_distribution }
            version: { get_input: os_version }
      requirements:
        - local_storage:
            node: block_device
            capability: tosca.capabilities.Attachment
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: { get_input: mountpoint }
                device: vdb

    block_device:
      type: tosca.nodes.indigo.BlockStorage
      properties:
        size: { get_input: volume_size }

  outputs:
    node_ip:
      value: { get_attribute: [ server, public_address, 0 ] }
    node_creds:
      value: { get_attribute: [ server, endpoint, credential, 0 ] }
