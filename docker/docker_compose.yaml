tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://github.com/indigo-paas/tosca-types/raw/main/tosca_types/infrastructure/docker_types.yaml

description: >
  Deploy a virtual machine with docker engine and docker-compose pre-installed.
  Optionally run a docker compose file fetched from the specified URL. 

metadata:
  display_name: Docker-compose

topology_template:

  inputs:
    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 2

    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 4 GB

    docker_compose_file_url:
      type: string
      default: ""
      description: URL of the docker compose file to deploy

    project_name:
      type: string
      default: myprj
      description: Name of the project. This name will be used to create a folder under /opt to store the docker compose file

    environment_variables:
      required: no
      default: []
      type: list
      entry_schema:
        type: map
        entry_schema:
          type: string
      description: Environment variables

    service_ports:
      type: map
      required: false
      default: { "ssh": { "protocol": "tcp", "source": 22 } }
      constraints:
        - min_length: 0
      entry_schema:
        type: tosca.datatypes.indigo.network.PortSpec
      description: Ports to open to access the service(s)


  node_templates:

    pub_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: public

    server_pub_port:
      type: tosca.nodes.network.Port
      properties:
        order: 1
      requirements:
        - binding: server
        - link: pub_network

    priv_network:
      type: tosca.nodes.network.Network
      properties:
        network_type: private

    server_priv_port:
      type: tosca.nodes.network.Port
      properties:
        order: 0
      requirements:
        - binding: server
        - link: priv_network

    docker_compose_service:
      type: tosca.nodes.indigo.DockerCompose
      properties:
        project_name:  { get_input: project_name }
        docker_compose_file_url: { get_input: docker_compose_file_url }
        environment_variables: { get_input: environment_variables }
      requirements:
        - host: server

    server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            ports: { get_input: service_ports }
        host:
          properties:
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            distribution: ubuntu
            type: linux
            version: 20.04

  outputs:
    node_ip:
      value: { get_attribute: [ server, public_address, 0 ] }
    node_creds:
      value: { get_attribute: [ server, endpoint, credential, 0 ] }
